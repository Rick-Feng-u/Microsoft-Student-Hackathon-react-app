import { ThemeReference } from '@fluentui-react-native/theme';
import { defaultFluentDarkTheme, defaultFluentHighConstrastTheme, defaultFluentTheme } from './defaultTheme';
import { Appearance } from 'react-native';
import { getCurrentAppearance } from '@fluentui-react-native/theming-utils';
import assertNever from 'assert-never';
export function createDefaultTheme(options) {
    if (options === void 0) { options = {}; }
    var themeRef = new ThemeReference({}, function () {
        var current = getCurrentAppearance(options.appearance, options.defaultAppearance || 'light');
        switch (current) {
            case 'light':
                return defaultFluentTheme;
            case 'dark':
                return defaultFluentDarkTheme;
            case 'highContrast':
                return defaultFluentHighConstrastTheme;
            default:
                assertNever(current);
        }
    });
    if (Appearance && options.appearance === 'dynamic') {
        Appearance.addChangeListener(function () {
            themeRef.invalidate();
        });
    }
    return themeRef;
}
//# sourceMappingURL=createDefaultTheme.js.map