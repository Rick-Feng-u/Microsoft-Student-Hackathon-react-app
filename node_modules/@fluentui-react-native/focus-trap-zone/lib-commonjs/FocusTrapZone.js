"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
var foundation_composable_1 = require("@uifabricshared/foundation-composable");
var foundation_settings_1 = require("@uifabricshared/foundation-settings");
var interactive_hooks_1 = require("@fluentui-react-native/interactive-hooks");
var component_cache_1 = require("@fluentui-react-native/component-cache");
var RCTFocusTrapZone = component_cache_1.ensureNativeComponent('RCTFocusTrapZone');
function filterOutComponentRef(propName) {
    return propName !== 'componentRef';
}
exports.filterOutComponentRef = filterOutComponentRef;
exports.FocusTrapZone = foundation_composable_1.composable({
    usePrepareProps: function (userProps, useStyling) {
        var ftzRef = interactive_hooks_1.useViewCommandFocus(userProps.componentRef);
        return {
            slotProps: foundation_settings_1.mergeSettings(useStyling(userProps), { root: __assign(__assign({}, userProps), { ref: ftzRef }) }),
        };
    },
    slots: {
        root: { slotType: RCTFocusTrapZone, filter: filterOutComponentRef },
    },
});
//# sourceMappingURL=FocusTrapZone.js.map