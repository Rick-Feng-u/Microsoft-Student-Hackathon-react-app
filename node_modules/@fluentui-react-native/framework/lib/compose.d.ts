import { Theme } from '@fluentui-react-native/theme-types';
import { ComposeFactoryOptions, ComposeFactoryComponent, UseStyledSlots } from '@fluentui-react-native/composition';
/**
 * This is an object used purely for configuring the typings on composable.  It is not necessary to define
 * the type via the IComposableType interface, this is simply the format used to extract the type info.
 */
export interface ComposeType<TProps, TSlotProps, TTokens, TStatics = object> {
    props: TProps;
    slotProps: TSlotProps;
    tokens: TTokens;
    statics: TStatics;
}
/** fragments used in type extraction */
declare type PropsFragment<TProps> = {
    props: TProps;
};
declare type SlotPropsFragment<TSlotProps> = {
    slotProps: TSlotProps;
};
declare type TokensFragment<TTokens> = {
    tokens: TTokens;
};
declare type StaticsFragment<TStatics extends object> = {
    statics: TStatics;
};
/** Extraction types that get the various interface types from IComposableType */
export declare type ExtractProps<T> = T extends PropsFragment<infer U> ? U : never;
export declare type ExtractSlotProps<T> = T extends SlotPropsFragment<infer U> ? U : never;
export declare type ExtractTokens<T> = T extends TokensFragment<infer U> ? U : object;
export declare type ExtractStatics<T> = T extends StaticsFragment<infer U> ? U : object;
export declare type ComposeOptions<TProps, TSlotProps, TTokens, TStatics extends object> = ComposeFactoryOptions<TProps, TSlotProps, TTokens, Theme, TStatics>;
export declare type ComposableComponent<TProps, TSlotProps, TTokens, TStatics extends object> = ComposeFactoryComponent<TProps, TSlotProps, TTokens, Theme, TStatics>;
export declare type UseSlots<T> = UseStyledSlots<ExtractProps<T>, ExtractSlotProps<T>>;
export declare function compose<T>(options: ComposeOptions<ExtractProps<T>, ExtractSlotProps<T>, ExtractTokens<T>, ExtractStatics<T>>, base?: ComposableComponent<ExtractProps<T>, ExtractSlotProps<T>, ExtractTokens<T>, ExtractStatics<T>>): ComposableComponent<ExtractProps<T>, ExtractSlotProps<T>, ExtractTokens<T>, ExtractStatics<T>>;
export {};
