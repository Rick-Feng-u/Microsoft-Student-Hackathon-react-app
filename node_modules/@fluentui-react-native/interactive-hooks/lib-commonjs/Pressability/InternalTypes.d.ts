/**
 * A collection of internal types from react-native that are not currently exposed in TypeScript
 */
import * as React from 'react';
export declare type Rect = Readonly<{
    bottom?: number;
    left?: number;
    right?: number;
    top?: number;
}>;
export declare type RectOrSize = Rect | number;
export declare function normalizeRect(size: RectOrSize): Rect;
export declare type MeasureOnSuccessCallback = (x: number, y: number, width: number, height: number, pageX: number, pageY: number) => void;
export declare type MeasureInWindowOnSuccessCallback = (x: number, y: number, width: number, height: number) => void;
export declare type MeasureLayoutOnSuccessCallback = (left: number, top: number, width: number, height: number) => void;
/**
 * temporary port of changes that are in flight for the react and react-native types definition
 */
export interface ComponentMethods<Props> {
    context: any;
    props: Props;
    state: any;
    refs: {
        [key: string]: React.ReactInstance;
    };
    setState(state: any, cb?: () => void): void;
    render(): React.ReactNode;
    forceUpdate(callback?: () => void): void;
}
/**
 * temporary port of changes that are in flight for the react and react-native types definition
 */
export declare type AbstractComponent<Config extends {}, Instance = unknown> = (React.FunctionComponent<Config> & ((props: React.PropsWithChildren<Config>, context?: any) => Instance)) | {
    new (props: Config, context?: any): Instance & ComponentMethods<Config>;
};
/**
 * internal definitions from RN project
 */
export declare type NativeMethods = {
    blur(): void;
    focus(): void;
    measure(callback: MeasureOnSuccessCallback): void;
    measureInWindow(callback: MeasureInWindowOnSuccessCallback): void;
    measureLayout(relativeToNativeNode: number | React.ElementRef<HostComponent<any>>, onSuccess: MeasureLayoutOnSuccessCallback, onFail?: () => void): void;
    setNativeProps(nativeProps: object): void;
};
export declare type HostComponent<T> = AbstractComponent<T, Readonly<NativeMethods>>;
//# sourceMappingURL=InternalTypes.d.ts.map