import * as React from 'react';
/* Re-usable hook for toggle components.
 * This hook configures the checked state, the callback to toggle the component
 * It handles the controlled/uncontrolled functionality of the toggle component.
 *
 * PROPS:  defaultChecked - Default checked state. Mutually exclusive to ‘checked’. This should come from userProps
 *         checked - Checked state. Mutually exclusive to 'defaultChecked'. This should come from userProps
 *         userCallback() - Callback provided by userProps when the checked (toggle) state changes
 * RETURNS:
 *         onChange() - Callback to toggle the component
 *         state.isChecked - Whether or not component is currently checked or selected
 */
export function useAsToggle(defaultChecked, checked, userCallback) {
    var _a = React.useState(defaultChecked !== null && defaultChecked !== void 0 ? defaultChecked : checked), isChecked = _a[0], setChecked = _a[1];
    var onChange = React.useCallback(function () {
        userCallback && userCallback(!isChecked);
        setChecked(!isChecked);
    }, [isChecked, setChecked]);
    return [checked !== null && checked !== void 0 ? checked : isChecked, onChange];
}
//# sourceMappingURL=useAsToggle.js.map