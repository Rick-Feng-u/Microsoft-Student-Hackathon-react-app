import { KeyPressEvent } from './Pressability/CoreEventTypes';
export declare type KeyUpCallback = (args?: KeyPressEvent) => void;
export declare function useKeyCallback(userCallback?: KeyUpCallback, ...keys: string[]): (args: Readonly<{
    bubbles?: boolean;
    cancelable?: boolean;
    currentTarget: unknown;
    defaultPrevented?: boolean;
    dispatchConfig: Readonly<{
        registrationName: string;
    }>;
    eventPhase?: number;
    preventDefault: () => void;
    isDefaultPrevented: () => boolean;
    stopPropagation: () => void;
    isPropagationStopped: () => boolean;
    isTrusted?: boolean;
    nativeEvent: Readonly<{
        key: string;
        target?: number;
        eventCounter?: number;
    }>;
    persist: () => void;
    target?: unknown;
    timeStamp: number;
    type?: string;
}>) => void;
//# sourceMappingURL=useKeyCallback.win32.d.ts.map