import * as React from 'react';
/* Re-usable hook for pressable components.
 * This hook sets focus on a component after onPress behavior.
 *
 * PROPS:  focusRef - the ref used to set focus
 *         userCallback() - Callback provided by userProps for onPress behavior
 * RETURNS:
 *         onPressWithFocus() - Callback to set focus after calling the userCallback for onPress
 */
export function useOnPressWithFocus(focusRef, userCallback) {
    var onPressWithFocus = React.useCallback(function (args) {
        var _a;
        userCallback && userCallback(args);
        (_a = focusRef === null || focusRef === void 0 ? void 0 : focusRef.current) === null || _a === void 0 ? void 0 : _a.focus();
    }, [userCallback, focusRef]);
    return onPressWithFocus;
}
//# sourceMappingURL=useOnPressWithFocus.js.map