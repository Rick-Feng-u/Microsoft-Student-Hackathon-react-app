export declare type ValueFactory<T> = () => T;
/** signature for the cache function */
export declare type GetMemoValue<T, TGet = any> = (factory: T | ValueFactory<T>, keys: any[]) => [T, GetMemoValue<TGet>];
/**
 * Get a memo cache instance, this can either be completely self-contained or associated with a global key
 *
 * @param globalKey - optional object reference to use as a key for this cache.  If specified it can be used
 * to retrieve the same cache from the global call.  If not specified the returned cache will be completely isolated.
 */
export declare function getMemoCache<T = any>(globalKey?: object): GetMemoValue<T>;
//# sourceMappingURL=getMemoCache.d.ts.map