import { getMemoCache } from './getMemoCache';
/**
 * This wraps a function to memoize the results using the standard javascript memoization pattern
 * @param fn - function to memoize
 */
// eslint-disable-next-line @typescript-eslint/ban-types
export function memoize(fn) {
    // create a unique cache that will be captured in the closure
    var cache = getMemoCache();
    // create the closure which wraps the calling function
    var closure = function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        return cache(function () { return fn.apply(void 0, (args || [])); }, args)[0];
    };
    // now return that closure strongly typed as the function.
    return closure;
}
//# sourceMappingURL=memoize.js.map