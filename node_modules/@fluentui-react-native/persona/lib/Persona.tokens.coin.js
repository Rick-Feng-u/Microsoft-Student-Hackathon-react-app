var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
import { styleFunction } from '@uifabricshared/foundation-tokens';
import { buildRootStyles as buildPersonaCoinRootStyle } from '@fluentui-react-native/persona-coin';
var _coinStyleKeys = [
    'coinSize',
    'size',
    'horizontalIconAlignment',
    'verticalIconAlignment',
    'coinBackgroundColor',
];
function _buildCoinStyle(tokenProps, theme) {
    var coinBackgroundColor = tokenProps.coinBackgroundColor, rest = __rest(tokenProps, ["coinBackgroundColor"]);
    var personaCoinTokens = __assign(__assign({}, rest), { backgroundColor: coinBackgroundColor });
    return buildPersonaCoinRootStyle(personaCoinTokens, theme);
}
export var buildCoinStyle = styleFunction(_buildCoinStyle, _coinStyleKeys);
//# sourceMappingURL=Persona.tokens.coin.js.map