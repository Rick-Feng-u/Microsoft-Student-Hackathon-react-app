/**
 * This is primarily a fork of React Native's Touchable Mixin.
 * It has been repurposed as it's own standalone control for win32,
 * as it needs to support a richer set of functionality on the desktop.
 * The touchable variants can be rewritten as wrappers around TouchableWin32
 * by passing the correct set of props down and managing state correctly.
 *
 * React Native's Touchable.js file (https://github.com/facebook/react-native/blob/master/Libraries/Components/Touchable/Touchable.js)
 * provides an overview over how touchables work and interact with the gesture responder system.
 */
'use strict';
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
Object.defineProperty(exports, "__esModule", { value: true });
var foundation_composable_1 = require("@uifabricshared/foundation-composable");
var react_native_1 = require("react-native");
var foundation_settings_1 = require("@uifabricshared/foundation-settings");
var interactive_hooks_1 = require("@fluentui-react-native/interactive-hooks");
exports.Pressable = foundation_composable_1.composable({
    slots: { root: react_native_1.View },
    usePrepareProps: function (userProps, useStyling) {
        var renderStyle = userProps.renderStyle, rest = __rest(userProps, ["renderStyle"]);
        var _a = interactive_hooks_1.useAsPressable(rest), props = _a.props, state = _a.state;
        var styleProps = useStyling(props);
        renderStyle && (props.style = renderStyle(state));
        return {
            slotProps: foundation_settings_1.mergeSettings(styleProps, { root: props }),
            state: { state: state },
        };
    },
});
exports.default = exports.Pressable;
//# sourceMappingURL=Pressable.js.map