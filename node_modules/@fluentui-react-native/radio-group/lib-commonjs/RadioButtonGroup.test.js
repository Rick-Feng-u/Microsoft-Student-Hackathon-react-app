"use strict";
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
var React = __importStar(require("react"));
var react_native_1 = require("react-native");
var _1 = require(".");
var renderer = __importStar(require("react-test-renderer"));
describe('RadioButton component tests', function () {
    it('RadioButton default', function () {
        var tree = renderer.create(React.createElement(_1.RadioGroup, { label: "Uncontrolled RadioGroup", defaultSelectedKey: "key2" },
            React.createElement(_1.RadioButton, { buttonKey: "key1", content: "RadioButton1" }),
            React.createElement(_1.RadioButton, { buttonKey: "key2", content: "RadioButton2" })));
        expect(tree).toMatchSnapshot();
    });
    it('RadioButton not direct child of radio group', function () {
        var tree = renderer.create(React.createElement(_1.RadioGroup, { label: "Uncontrolled RadioGroup", defaultSelectedKey: "key2" },
            React.createElement(react_native_1.View, null,
                React.createElement(_1.RadioButton, { buttonKey: "key1", content: "RadioButton1", accessibilityPositionInSet: 1, accessibilitySetSize: 2 }),
                React.createElement(_1.RadioButton, { buttonKey: "key2", content: "RadioButton2", accessibilityPositionInSet: 2, accessibilitySetSize: 2 }))));
        expect(tree).toMatchSnapshot();
    });
});
//# sourceMappingURL=RadioButtonGroup.test.js.map