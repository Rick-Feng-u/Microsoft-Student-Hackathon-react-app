"use strict";
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
var React = __importStar(require("react"));
var __1 = require("..");
var renderer = __importStar(require("react-test-renderer"));
var test_tools_1 = require("@fluentui-react-native/test-tools");
it('Text default', function () {
    var tree = renderer.create(React.createElement(__1.Text, null, "Text default")).toJSON();
    expect(tree).toMatchSnapshot();
});
it('Text all props', function () {
    var tree = renderer
        .create(React.createElement(__1.Text, { disabled: true, variant: "bodyStandard" }, "All props"))
        .toJSON();
    expect(tree).toMatchSnapshot();
});
it('Text all tokens', function () {
    var BoldText = __1.Text.customize({
        tokens: {
            fontFamily: 'Wingdings',
            fontWeight: '900',
            fontSize: 20,
        },
    });
    var tree = renderer.create(React.createElement(BoldText, null, "All tokens")).toJSON();
    expect(tree).toMatchSnapshot();
});
it('Text simple rendering does not invalidate styling', function () {
    test_tools_1.checkRenderConsistency(function () { return React.createElement(__1.Text, null, "Default"); });
    test_tools_1.checkRenderConsistency(function () { return React.createElement(__1.Text, { disabled: true }, "Default"); });
    test_tools_1.checkRenderConsistency(function () { return React.createElement(__1.Text, { variant: "headerStandard" }, "Default"); });
});
it('Text re-renders correctly', function () {
    test_tools_1.checkReRender(function () { return React.createElement(__1.Text, null, "Default"); });
    test_tools_1.checkReRender(function () { return React.createElement(__1.Text, { disabled: true }, "Default"); });
    test_tools_1.checkReRender(function () { return React.createElement(__1.Text, { variant: "headerStandard" }, "Default"); });
});
it('Text shares produced styles across multiple renders', function () {
    var style = { color: 'black' };
    test_tools_1.checkRenderConsistency(function () { return React.createElement(__1.Text, { style: style }, "Default"); });
    test_tools_1.checkRenderConsistency(function () { return (React.createElement(__1.Text, { style: style, disabled: true }, "Default")); });
    test_tools_1.checkRenderConsistency(function () { return (React.createElement(__1.Text, { style: style, variant: "headerStandard" }, "Default")); });
});
it('Text re-renders correctly with style', function () {
    var style = { color: 'blue' };
    test_tools_1.checkReRender(function () { return React.createElement(__1.Text, { style: style }, "Default"); });
    test_tools_1.checkReRender(function () { return (React.createElement(__1.Text, { style: style, disabled: true }, "Default")); });
    test_tools_1.checkReRender(function () { return (React.createElement(__1.Text, { style: style, variant: "headerStandard" }, "Default")); });
});
//# sourceMappingURL=Text.test.win32.js.map