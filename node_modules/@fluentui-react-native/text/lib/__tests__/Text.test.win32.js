import * as React from 'react';
import { Text } from '..';
import * as renderer from 'react-test-renderer';
import { checkReRender, checkRenderConsistency } from '@fluentui-react-native/test-tools';
it('Text default', function () {
    var tree = renderer.create(React.createElement(Text, null, "Text default")).toJSON();
    expect(tree).toMatchSnapshot();
});
it('Text all props', function () {
    var tree = renderer
        .create(React.createElement(Text, { disabled: true, variant: "bodyStandard" }, "All props"))
        .toJSON();
    expect(tree).toMatchSnapshot();
});
it('Text all tokens', function () {
    var BoldText = Text.customize({
        tokens: {
            fontFamily: 'Wingdings',
            fontWeight: '900',
            fontSize: 20,
        },
    });
    var tree = renderer.create(React.createElement(BoldText, null, "All tokens")).toJSON();
    expect(tree).toMatchSnapshot();
});
it('Text simple rendering does not invalidate styling', function () {
    checkRenderConsistency(function () { return React.createElement(Text, null, "Default"); });
    checkRenderConsistency(function () { return React.createElement(Text, { disabled: true }, "Default"); });
    checkRenderConsistency(function () { return React.createElement(Text, { variant: "headerStandard" }, "Default"); });
});
it('Text re-renders correctly', function () {
    checkReRender(function () { return React.createElement(Text, null, "Default"); });
    checkReRender(function () { return React.createElement(Text, { disabled: true }, "Default"); });
    checkReRender(function () { return React.createElement(Text, { variant: "headerStandard" }, "Default"); });
});
it('Text shares produced styles across multiple renders', function () {
    var style = { color: 'black' };
    checkRenderConsistency(function () { return React.createElement(Text, { style: style }, "Default"); });
    checkRenderConsistency(function () { return (React.createElement(Text, { style: style, disabled: true }, "Default")); });
    checkRenderConsistency(function () { return (React.createElement(Text, { style: style, variant: "headerStandard" }, "Default")); });
});
it('Text re-renders correctly with style', function () {
    var style = { color: 'blue' };
    checkReRender(function () { return React.createElement(Text, { style: style }, "Default"); });
    checkReRender(function () { return (React.createElement(Text, { style: style, disabled: true }, "Default")); });
    checkReRender(function () { return (React.createElement(Text, { style: style, variant: "headerStandard" }, "Default")); });
});
//# sourceMappingURL=Text.test.win32.js.map