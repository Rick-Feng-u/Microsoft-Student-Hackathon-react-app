import * as React from 'react';
import { NativeReactType } from './renderSlot';
import { ComposableFunction } from './stagedComponent';
/**
 * useSlot hook function, allows authoring against pluggable slots as well as allowing components to be called as functions rather than
 * via createElement if they support it.
 *
 * @param component - any kind of component that can be rendered as part of the tree
 * @param props - props, particularly the portion that includes styles, that should be passed to the component. These will be merged with what are specified in the JSX tree
 * @param filter - optional filter that will prune the props before forwarding to the component
 * @returns
 */
export declare function useSlot<TProps>(component: NativeReactType | ComposableFunction<TProps>, props: TProps, filter?: (propName: string) => boolean): React.FunctionComponent<TProps>;
//# sourceMappingURL=useSlot.d.ts.map