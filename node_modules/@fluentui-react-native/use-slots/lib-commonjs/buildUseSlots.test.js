"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
/** @jsx withSlots */
var use_slot_1 = require("@fluentui-react-native/use-slot");
var renderer = __importStar(require("react-test-renderer"));
var buildUseSlots_1 = require("./buildUseSlots");
var react_native_1 = require("react-native");
var useSlotsBase = buildUseSlots_1.buildUseSlots({
    slots: {
        outer: react_native_1.View,
        inner: react_native_1.View,
        content: react_native_1.Text,
    },
});
var CompBase = use_slot_1.stagedComponent(function (props) {
    var Slots = useSlotsBase(props);
    return function (extra) {
        var merged = __assign(__assign({}, props), extra);
        return (use_slot_1.withSlots(Slots.outer, __assign({}, merged),
            use_slot_1.withSlots(Slots.inner, { style: { backgroundColor: 'blue', width: 20, height: 10 } },
                use_slot_1.withSlots(Slots.content, null, "Hello"))));
    };
});
describe('buildUseSlots test suite', function () {
    it('Simple component render', function () {
        var tree = renderer.create(use_slot_1.withSlots(CompBase, { style: { width: 30, height: 20, borderColor: 'green', borderWidth: 1 } })).toJSON();
        expect(tree).toMatchSnapshot();
    });
});
//# sourceMappingURL=buildUseSlots.test.js.map