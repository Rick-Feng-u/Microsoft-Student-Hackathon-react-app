import { TokensThatAreAlsoProps, BuildSlotProps } from './buildProps';
import { HasLayer, TokenSettings } from '@fluentui-react-native/use-tokens';
/**
 * Options used to build up a useStyling hook
 */
export declare type UseStylingOptions<TProps, TSlotProps, TTokens, TTheme> = {
    /**
     * Baseline tokens for this component
     */
    tokens?: TokenSettings<TTokens, TTheme>[];
    /**
     * States that might be applied for the component like disabled or hovered, these should be listed
     * in the order that they should be applied
     */
    states?: (keyof TTokens)[];
    /**
     * Functions which build up the props for each slot
     */
    slotProps?: BuildSlotProps<TSlotProps, TTokens, TTheme, TProps>;
    /**
     * Which props should be considered to be tokens.
     * - If an array of keys this will ensure these props are promoted to tokens
     * - If true all props will be added to tokens, if false or not specified no props will be treated as tokens
     */
    tokensThatAreAlsoProps?: TokensThatAreAlsoProps<TTokens>;
    /** purely used to make type inferencing work correctly so the hook builder can pick up TProps from this type */
    _propsType?: TProps;
};
/**
 * Signature for the use styling hook
 */
export declare type UseStyling<TProps, TSlotProps> = (props: TProps, lookup?: HasLayer) => TSlotProps;
/**
 * Helper object which injects theme specific functionality
 */
export declare type ThemeHelper<TTheme> = {
    /** query the theme from the context, or from a global if your system doesn't use theming */
    useTheme: () => TTheme;
    /** lookup info for the component in the theme */
    getComponentInfo: (theme: TTheme, name: string) => any;
};
/**
 * Construct a useStyling hook which returns styled slot props based on props and tokens defined in options and in the theme
 *
 * @param options - options which drive behavior for the generated styling hook
 * @param themeHelper - injected theme functionality
 */
export declare function buildUseStyling<TProps, TSlotProps, TTokens, TTheme>(options: UseStylingOptions<TProps, TSlotProps, TTokens, TTheme>, themeHelper: ThemeHelper<TTheme>): UseStyling<TProps, TSlotProps>;
//# sourceMappingURL=buildUseStyling.d.ts.map