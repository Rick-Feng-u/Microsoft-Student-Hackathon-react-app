import { GetMemoValue } from '@fluentui-react-native/memo-cache';
/**
 * alternatively look them up with a passed in function
 */
export declare type HasLayer = (name: string) => boolean;
/**
 * Apply token layers, building them up applied layer by applied layer, using the cache to store intermediate
 * values
 *
 * @param tokens - input tokens which may have layers to apply
 * @param states - array of states to check for, ordered by precedence
 * @param subCache - cache scoped to the root object with no layers applied
 * @param hasLayer - a function which returns whether a given layer should be applied
 */
export declare function applyTokenLayers<TTokens>(tokens: TTokens, states: string[], subCache: GetMemoValue<TTokens>, hasLayer: HasLayer): [TTokens, GetMemoValue<TTokens>];
//# sourceMappingURL=applyTokenLayers.d.ts.map