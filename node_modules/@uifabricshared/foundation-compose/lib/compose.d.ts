import { IComposeOptions, IComposeReturnType, IExtractStatics, IExtractTokens } from './compose.types';
import { INativeSlotType, IExtractProps, IExtractSlotProps, IExtractState } from '@uifabricshared/foundation-composable';
/**
 * Assembles a higher order component, optionally composing a base HOC or base primitive control.  The compose pattern
 * allows a greater degree of customization than is available via props and allows for customization without adding
 * additional layers to the react hierarchy.
 *
 * @param inputComponent - component definition for the component to be created.  See IComposeOptions for more details.
 * @param base - optional base component to compose, this can be an intrinsic, a stock element, or another composable
 */
export declare function compose<TType>(inputComponent: Partial<IComposeOptions<IExtractProps<TType>, IExtractSlotProps<TType>, IExtractTokens<TType>, IExtractState<TType>, IExtractStatics<TType>>>, base?: INativeSlotType): IComposeReturnType<IExtractProps<TType>, IExtractSlotProps<TType>, IExtractTokens<TType>, IExtractState<TType>, IExtractStatics<TType>>;
//# sourceMappingURL=compose.d.ts.map