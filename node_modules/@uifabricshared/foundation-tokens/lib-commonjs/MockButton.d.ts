import { IMockTextTokens, IMockColorTokens, IMockBorderTokens, IMockForegroundColorTokens, IMockCaptionTextTokens } from './MockTokens';
import { IMockBaseProps } from './MockComponent';
import { IComponentSettings } from '@uifabricshared/foundation-settings';
export declare type IMockTextProps = IMockTextTokens & IMockForegroundColorTokens & IMockBaseProps;
export declare type IMockViewProps = IMockBaseProps;
export declare type IMockImageProps = IMockBaseProps;
export interface IMockButtonProps extends IMockTextTokens, IMockBaseProps {
    content?: string;
    icon?: string;
}
export declare type IMockButtonCustomProps = IMockButtonProps & IMockColorTokens & IMockBorderTokens & IMockCaptionTextTokens;
export interface IMockTextSlotProps {
    root: IMockTextProps;
}
export interface IMockButtonSlotProps {
    root: IMockButtonCustomProps;
    content: IMockTextProps;
    subContent: IMockViewProps;
    icon: IMockImageProps;
}
export declare type IButtonSettings = IComponentSettings<IMockButtonSlotProps> & {
    tokens?: IMockButtonCustomProps;
};
/**
 * A mock simple text component with one slot that represents an internal text element.  This
 * supports text and fg color tokens.  These tokens should be delegated here and styles should be
 * produced by the MockText component itself for those tokens
 */
export declare const MockText: import("./MockComponent").IMockComponent<IMockTextProps, IMockTextSlotProps, IMockTextTokens & IMockForegroundColorTokens>;
/**
 * A mock button component that has a stock component for its root node, a sub-component for
 * text, and a stock component for the icon
 */
export declare const MockButton: import("./MockComponent").IMockComponent<IMockButtonCustomProps, IMockButtonSlotProps, IMockButtonCustomProps>;
//# sourceMappingURL=MockButton.d.ts.map