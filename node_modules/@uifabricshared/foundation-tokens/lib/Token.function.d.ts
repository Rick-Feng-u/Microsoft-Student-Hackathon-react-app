import { ISlotProps } from '@uifabricshared/foundation-settings';
import { ITargetHasToken, IComponentTokens, IStyleFactories, IStyleFactoryFunction, IStyleFactoryFunctionRaw } from './Token.types';
/**
 * Helper to make it easy to create a style factory function.  Function statics are super convenient
 * but kind of annoying to set up
 *
 * @param fn - function to decorate with keys
 * @param keys - keys to append as a static to the function
 */
export declare function styleFunction<TProps, TTokens, TTheme>(fn: IStyleFactoryFunctionRaw<TProps, TTokens, TTheme>, keys: (keyof TTokens)[]): IStyleFactoryFunction<TProps, TTokens, TTheme>;
/**
 * This function runs at component definition time (once for every component type) and
 * processes the styleFactories on each of the slots and builds up handler functions that
 * obtain or build the cached props.
 *
 * @param factories - collection of slot style factories
 * @param hasToken - a function that returns whether or not a slot supports a given token
 */
export declare function buildComponentTokens<TSlotProps extends ISlotProps, TTokens, TTheme>(factories: IStyleFactories<TSlotProps, TTokens, TTheme>, hasToken?: ITargetHasToken): IComponentTokens<TSlotProps, TTokens, TTheme>;
//# sourceMappingURL=Token.function.d.ts.map